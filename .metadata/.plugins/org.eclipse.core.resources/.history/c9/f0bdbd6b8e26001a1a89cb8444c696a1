package com.meli.payment.service;

import java.util.List;

import javax.jms.Queue;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;
import org.springframework.http.ResponseEntity;
import org.springframework.jms.core.JmsTemplate;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.google.gson.Gson;
import com.meli.payment.exception.PaymentAlreadyProcessedException;
import com.meli.payment.model.Payment;
import com.meli.payment.model.to.TotalDebtTO;
import com.meli.payment.repository.PaymentRepository;

@Service
public class PaymentService {

	@Autowired
	private JmsTemplate jmsTemplate;

	@Autowired
	private Queue queueCharge;

	@Autowired
	private PaymentRepository paymentRepo;
	
	@Autowired
	private Gson gson;
	
	@Autowired
	private Environment env;

	@Autowired
	private RestTemplate restTemplate;

	public String createPayment(Payment payment) {
		
		String urlChargePayment = env.getProperty("charge.api.url");
		ResponseEntity<TotalDebtTO> forEntity = restTemplate.getForEntity(urlChargePayment + "/totaldebt/" + payment.getUserId(), TotalDebtTO.class);
		TotalDebtTO totalDebt = forEntity.getBody();
		if(payment.getAmount() > totalDebt.getTotalDebt()) {
			throw new PagoExcedeDeudaException(String.format("El pago con monto '%1$,.2f (%2$,.2f %3$s)' excede la deuda del usuario", pago.getAmount(), pago.getEventoOrigen().getAmount(), pago.getEventoOrigen().getCurrency()));
		}
		
		if(paymentRepo.existsById(payment.getId())) {
			throw new PaymentAlreadyProcessedException(String.format("Ya existe un pago con ID '%s'", payment.getId()));
		}

		Payment paymentInserted = paymentRepo.insert(payment);

		String paymentStr = gson.toJson(paymentInserted);
		jmsTemplate.convertAndSend(queueCharge, paymentStr);

		System.out.println("mensaje encolado: " + paymentStr);

		return paymentInserted.getId();
	}

	public List<Payment> listByUserId(Integer user_id) {
		return paymentRepo.findByUserId(user_id);
	}

}
